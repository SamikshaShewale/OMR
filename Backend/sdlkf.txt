ef process_image(image_path):
        omrpath = os.listdir("static/omr_sheets/")
        answerpath = os.listdir("static/answer/")

        if (len(omrpath)!=0 and len(answerpath)!=0):
            filepath = "static/result/ans.csv"
            csv_file = os.listdir("static/answer/")
            csv_path = "static/answer/" + str(csv_file[0])
            df = pd.read_csv(csv_path)
            qno = df.qno.to_list()
            q=len(qno)
            if(q==20):
                return omr_processing.omr_calculation(image_path)
            elif(q==30):
                return omr_processing.omr_calculation_1(image_path)
            else:
                message3 = "Please Check No Of Question in OMR or Answer Sheet"
                return print("error 404")
            with open(filepath) as csv_file:
                data = csv.reader(csv_file, delimiter=',')
                first_line = True
                files = []
                for row in data:
                    if not first_line:
                        files.append({
                            "roll": row[0],
                            "score": row[1],
                        })
                    else:
                        first_line = False
            return render_template("result.html",files=files)
        else:
            message3 = "Upload OMR & Answer Sheets"
            # return render_template("index.html", message3=message3)




@app.route('/upload', methods=['POST'])
def upload_file():
    if 'answerSheet' not in request.files:
        return jsonify({'error': 'No file part'})

    file = request.files['answerSheet']

    # Save the uploaded file temporarily
    upload_dir = 'uploads'
    os.makedirs(upload_dir, exist_ok=True)
    file_path = os.path.join(upload_dir, file.filename)
    file.save(file_path)

    # Process the uploaded file
    result = process_image(file_path)

    # Return the result
    return jsonify({'result': result})

if __name__ == '__main__':
    app.run(debug=True)